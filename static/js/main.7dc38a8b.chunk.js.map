{"version":3,"sources":["components/Select/index.js","App.js","reportWebVitals.js","index.js"],"names":["SelectCustom","LIST","useState","isShowElements","setIsShowElements","isCrossActive","setIsCrossActive","selectList","setSelectList","wrapSecond","document","getElementById","removeClass","i","children","length","classList","remove","clickElement","e","value","target","innerHTML","add","className","autoComplete","id","type","placeholder","onChange","result","filter","item","indexOf","cn","elementShow","onClick","elementHide","map","App","Select","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8PAgHeA,MA3Gf,WACI,IAAMC,EAAO,CACT,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,QACA,SAZgB,EAewBC,oBAAS,GAfjC,mBAebC,EAfa,KAeGC,EAfH,OAgBsBF,oBAAS,GAhB/B,mBAgBbG,EAhBa,KAgBEC,EAhBF,OAiBgBJ,mBAASD,GAjBzB,mBAiBbM,EAjBa,KAiBDC,EAjBC,KAkBdC,EAAaC,SAASC,eAAe,UAErCC,EAAc,WAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAWK,SAASC,OAAQF,IAC5CJ,EAAWK,SAASD,GAAGG,UAAUC,OAAO,iBAqB1CC,EAAe,SAACC,GAClBT,SAASC,eAAe,UAAUS,MAAQD,EAAEE,OAAOC,UAEnDV,IAEAO,EAAEE,OAAOL,UAAUO,IAAI,gBAEvBjB,GAAiB,GACjBF,GAAkB,GAClBI,EAAcP,IAalB,OACI,qBAAKuB,UAAU,SAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBACIA,UAAU,OADd,UAGI,sBAAKA,UAAU,UAAf,UACI,8BACI,uBACIC,aAAa,MACbC,GAAG,SACHC,KAAK,OACLC,YAAY,aACZC,SApDP,SAACV,GACK,KAAnBA,EAAEE,OAAOD,OACTR,IAGJ,IAAMkB,EAAS7B,EAAK8B,QAAO,SAAAC,GACvB,OAAyC,IAAlCA,EAAKC,QAAQd,EAAEE,OAAOD,UAGjChB,GAAkB,GAClBI,EAAcsB,QA6CE,qBACIN,UAAWU,IAAG,QAAS,CAAEC,YAAa9B,IACtC+B,QA5BL,WACf1B,SAASC,eAAe,UAAUS,MAAQ,GAC1CV,SAASC,eAAe,UAAUiB,YAAc,aAEhDhB,IAEAN,GAAiB,GACjBE,EAAcP,IAmBE,SAII,0CAEJ,qBAAKmC,QAhDN,WACfhC,GAAmBD,IA+CH,SACKA,EAAiB,0CAAuB,+CAIjD,qBAAKuB,GAAG,SAASF,UAAWU,IAAG,SAAU,CAAEG,aAAclC,IAAzD,SACKI,EAAW+B,KAAI,SAACN,GACb,OACI,qBAAgBI,QAASlB,EAAzB,SACKc,GADKA,gB,MCrF3BO,MAVf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAACgB,EAAD,SCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAASC,eAAe,SAM1B8B,M","file":"static/js/main.7dc38a8b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport cn from 'classnames';\n\nimport './select.css';\n\nfunction SelectCustom() {\n    const LIST = [\n        '0001',\n        '0002',\n        '0003',\n        '0004',\n        '0005',\n        '0006',\n        '0007',\n        '0008',\n        'test1',\n        'test2',\n        'test3'\n    ];\n\n    const [isShowElements, setIsShowElements] = useState(false);\n    const [isCrossActive, setIsCrossActive] = useState(false);\n    const [selectList, setSelectList] = useState(LIST);\n    const wrapSecond = document.getElementById('second');\n\n    const removeClass = () => {\n        for (let i = 0; i < wrapSecond.children.length; i++) {\n            wrapSecond.children[i].classList.remove('secondActive');\n        }\n    }\n\n    const handleChange = (e) => {\n        if (e.target.value === '') {\n            removeClass();\n        }\n\n        const result = LIST.filter(item => {\n            return item.indexOf(e.target.value) !== -1;\n        });\n\n        setIsShowElements(true);\n        setSelectList(result);\n    }\n\n    const clickArrow = () => {\n        setIsShowElements(!isShowElements);\n    }\n\n    const clickElement = (e) => {\n        document.getElementById('select').value = e.target.innerHTML;\n\n        removeClass();\n\n        e.target.classList.add('secondActive');\n\n        setIsCrossActive(true);\n        setIsShowElements(false);\n        setSelectList(LIST);\n    }\n\n    const clickReset = () => {\n        document.getElementById('select').value = '';\n        document.getElementById('select').placeholder = 'Select ...';\n\n        removeClass();\n\n        setIsCrossActive(false);\n        setSelectList(LIST);\n    }\n\n    return (\n        <div className=\"select\">\n            <div className=\"root\">\n                <div\n                    className=\"main\"\n                >\n                    <div className=\"mainTop\">\n                        <div>\n                            <input\n                                autoComplete=\"off\"\n                                id=\"select\"\n                                type=\"text\"\n                                placeholder=\"Select ...\"\n                                onChange={handleChange}\n                            />\n                        </div>\n                        <div\n                            className={cn('cross', { elementShow: isCrossActive })}\n                            onClick={clickReset}\n                        >\n                            <span>&#215;</span>\n                        </div>\n                        <div onClick={clickArrow}>\n                            {isShowElements ? <span>&#9652;</span> : <span>&#9662;</span> }\n                        </div>\n                    </div>\n\n                    <div id=\"second\" className={cn('second', { elementHide: !isShowElements })}>\n                        {selectList.map((item) => {\n                            return (\n                                <div key={item} onClick={clickElement}>\n                                    {item}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SelectCustom;\n","import React from 'react';\nimport SelectCustom from './components/Select';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SelectCustom />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}